<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://dreammilk.now.sh</id>
    <title>Milk &apos;s Home</title>
    <updated>2020-05-29T03:24:22.889Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://dreammilk.now.sh"/>
    <link rel="self" href="https://dreammilk.now.sh/atom.xml"/>
    <subtitle>welcome</subtitle>
    <logo>https://dreammilk.now.sh/images/avatar.png</logo>
    <icon>https://dreammilk.now.sh/favicon.ico</icon>
    <rights>All rights reserved 2020, Milk &apos;s Home</rights>
    <entry>
        <title type="html"><![CDATA[1062 最简分数 (20分)]]></title>
        <id>https://dreammilk.now.sh/1062-zui-jian-fen-shu-20-fen/</id>
        <link href="https://dreammilk.now.sh/1062-zui-jian-fen-shu-20-fen/">
        </link>
        <updated>2020-05-29T03:20:26.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>一个分数一般写成两个整数相除的形式：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi mathvariant="normal">/</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">N/M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>，其中 <em>M</em> 不为0。最简分数是指分子和分母没有公约数的分数表示形式。</p>
<p>现给定两个不相等的正分数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub><mi mathvariant="normal">/</mi><msub><mi>M</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N_1/M_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>2</mn></msub><mi mathvariant="normal">/</mi><msub><mi>M</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">N_2/M_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，要求你按从小到大的顺序列出它们之间分母为 <em>K</em> 的最简分数。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>一个分数一般写成两个整数相除的形式：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi mathvariant="normal">/</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">N/M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>，其中 <em>M</em> 不为0。最简分数是指分子和分母没有公约数的分数表示形式。</p>
<p>现给定两个不相等的正分数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub><mi mathvariant="normal">/</mi><msub><mi>M</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N_1/M_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>2</mn></msub><mi mathvariant="normal">/</mi><msub><mi>M</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">N_2/M_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，要求你按从小到大的顺序列出它们之间分母为 <em>K</em> 的最简分数。</p>
</blockquote>
<!-- more -->
<h3 id="输入格式">输入格式：</h3>
<blockquote>
<p>输入在一行中按 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi mathvariant="normal">/</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">N/M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span> 的格式给出两个正分数，随后是一个正整数分母 <em>K</em>，其间以空格分隔。题目保证给出的所有整数都不超过 1000。</p>
</blockquote>
<h3 id="输出格式">输出格式：</h3>
<blockquote>
<p>在一行中按 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi mathvariant="normal">/</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">N/M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span> 的格式列出两个给定分数之间分母为 <em>K</em> 的所有最简分数，按从小到大的顺序，其间以 1 个空格分隔。行首尾不得有多余空格。题目保证至少有 1 个输出。</p>
</blockquote>
<h3 id="输入样例">输入样例：</h3>
<pre><code class="language-in">7/18 13/20 12
</code></pre>
<h3 id="输出样例">输出样例：</h3>
<pre><code class="language-out">5/12 7/12
</code></pre>
<h3 id="思路">思路：</h3>
<p>题目比较容易：</p>
<blockquote>
<p>整体是统计在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub><mi mathvariant="normal">/</mi><msub><mi>M</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N_1/M_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>2</mn></msub><mi mathvariant="normal">/</mi><msub><mi>M</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">N_2/M_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>之间的A/K~B/K</p>
<p>并对每个n/K进行公约数检验，如果不存在公约数（公约数为1）</p>
<p>则符合最简分数要求</p>
</blockquote>
<p>需要注意的地方：</p>
<blockquote>
<p>对于输入的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub><mi mathvariant="normal">/</mi><msub><mi>M</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N_1/M_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>2</mn></msub><mi mathvariant="normal">/</mi><msub><mi>M</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">N_2/M_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>需要判断顺序是否正确，否则进行交换</p>
<p>分数的范围并不包括 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub><mi mathvariant="normal">/</mi><msub><mi>M</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N_1/M_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>2</mn></msub><mi mathvariant="normal">/</mi><msub><mi>M</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">N_2/M_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>两个数字</p>
</blockquote>
<h4 id="于是代码如下">于是代码如下：</h4>
<pre><code class="language-cpp">#include &lt;iostream&gt;

using namespace std;

int gcd(int a,int b){
    return a%b==0?b:gcd(b,a%b);
}

int main() {
    int n1,m1,n2,m2,k;
    scanf(&quot;%d/%d %d/%d %d&quot;,&amp;n1,&amp;m1,&amp;n2,&amp;m2,&amp;k);
    if(n1*m2&gt;n2*m1) {swap(n1,n2);swap(m1,m2);}
    int i=1;bool flag=true;
    while(i*m1&lt;=n1*k) i++;
    while(i*m2&lt;k*n2){
        if(gcd(i,k)==1){
            !flag?printf(&quot; &quot;):flag=false;
            printf(&quot;%d/%d&quot;,i,k);
        }
        i++;
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[1061 判断题 (15分)]]></title>
        <id>https://dreammilk.now.sh/1061-pan-duan-ti-15-fen/</id>
        <link href="https://dreammilk.now.sh/1061-pan-duan-ti-15-fen/">
        </link>
        <updated>2020-05-28T04:21:39.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>判断题的评判很简单，本题就要求你写个简单的程序帮助老师判题并统计学生们判断题的得分。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>判断题的评判很简单，本题就要求你写个简单的程序帮助老师判题并统计学生们判断题的得分。</p>
</blockquote>
<!-- more -->
<h3 id="输入格式">输入格式：</h3>
<blockquote>
<p>输入在第一行给出两个不超过 100 的正整数 N 和 M，分别是学生人数和判断题数量。第二行给出 M 个不超过 5 的正整数，是每道题的满分值。第三行给出每道题对应的正确答案，0 代表“非”，1 代表“是”。随后 N 行，每行给出一个学生的解答。数字间均以空格分隔。</p>
</blockquote>
<h3 id="输出格式">输出格式：</h3>
<blockquote>
<p>按照输入的顺序输出每个学生的得分，每个分数占一行。</p>
</blockquote>
<h3 id="输入样例">输入样例：</h3>
<pre><code class="language-in">3 6
2 1 3 3 4 5
0 0 1 0 1 1
0 1 1 0 0 1
1 0 1 0 1 0
1 1 0 0 1 1
</code></pre>
<h3 id="输出样例">输出样例：</h3>
<pre><code class="language-out">13
11
12
</code></pre>
<h3 id="思路">思路：</h3>
<p>题目相比于<code>1058 选择题</code>而言，降低了难度：</p>
<blockquote>
<p>准备两个数组，一个存放每个题目的分数，另一个存放每个题目的答案</p>
<p>然后循环学生的解答，答案正确的加分，之后输出当前学生的总分</p>
</blockquote>
<p>整体没有什么难点，基础题目</p>
<h4 id="于是代码如下">于是代码如下：</h4>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include&lt;vector&gt;

using namespace std;

int main() {
    int n,m;
    cin &gt;&gt; n &gt;&gt; m;
    vector&lt;int&gt; answer(m),score(m);
    for(int i=0;i&lt;m;i++){
        cin &gt;&gt; score[i];
    }
    for(int i=0;i&lt;m;i++){
        cin &gt;&gt; answer[i];
    }
    for(int i=0;i&lt;n;i++){
        int sum=0;
        for(int j=0;j&lt;m;j++){
            int option; cin &gt;&gt; option;
            if(option == answer[j]) sum += score[j];
        }
        cout &lt;&lt; sum &lt;&lt; endl;
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[1060 爱丁顿数 (25分)]]></title>
        <id>https://dreammilk.now.sh/1060-ai-ding-dun-shu-25-fen/</id>
        <link href="https://dreammilk.now.sh/1060-ai-ding-dun-shu-25-fen/">
        </link>
        <updated>2020-05-27T04:16:08.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>英国天文学家爱丁顿很喜欢骑车。据说他为了炫耀自己的骑车功力，还定义了一个“爱丁顿数” <em>E</em> ，即满足有 <em>E</em> 天骑车超过 <em>E</em> 英里的最大整数 <em>E</em>。据说爱丁顿自己的 <em>E</em> 等于87。</p>
<p>现给定某人 <em>N</em> 天的骑车距离，请你算出对应的爱丁顿数 <em>E</em>（≤<em>N</em>）。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>英国天文学家爱丁顿很喜欢骑车。据说他为了炫耀自己的骑车功力，还定义了一个“爱丁顿数” <em>E</em> ，即满足有 <em>E</em> 天骑车超过 <em>E</em> 英里的最大整数 <em>E</em>。据说爱丁顿自己的 <em>E</em> 等于87。</p>
<p>现给定某人 <em>N</em> 天的骑车距离，请你算出对应的爱丁顿数 <em>E</em>（≤<em>N</em>）。</p>
</blockquote>
<!-- more -->
<h3 id="输入格式">输入格式：</h3>
<blockquote>
<p>输入第一行给出一个正整数 <em>N</em> (≤<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>)，即连续骑车的天数；第二行给出 <em>N</em> 个非负整数，代表每天的骑车距离。</p>
</blockquote>
<h3 id="输出格式">输出格式：</h3>
<blockquote>
<p>在一行中给出 <em>N</em> 天的爱丁顿数。</p>
</blockquote>
<h3 id="输入样例">输入样例：</h3>
<pre><code class="language-in">10
6 7 6 9 3 10 8 2 7 8
</code></pre>
<h3 id="输出样例">输出样例：</h3>
<pre><code class="language-out">6
</code></pre>
<h3 id="思路">思路：</h3>
<p>题目不要使用傻乎乎的反复遍历：</p>
<blockquote>
<p>首先将输入的数字按从大到小进行排序（从小到大排序不能保证前面的数超过E）</p>
<p>遍历数字，每次遍历时E++，直到当前数字不超过E为止</p>
<p>最后输出E即可</p>
</blockquote>
<h4 id="于是代码如下">于是代码如下：</h4>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include&lt;vector&gt;
#include&lt;algorithm&gt;

using namespace std;

bool cmp(int a,int b){
    return a&gt;b;
}

int main() {
    int n;
    cin &gt;&gt; n;
    vector&lt;int&gt; v(n);
    for(int i=0;i&lt;n;i++){
        cin &gt;&gt; v[i];
    }
    sort(v.begin(),v.end(),cmp);
    int e=0;
    for(int i=0;i&lt;n;i++){
        if(v[i]&gt;e+1) e++;
        else break;
    }
    cout &lt;&lt; e &lt;&lt; endl;
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[1059 C语言竞赛 (20分)]]></title>
        <id>https://dreammilk.now.sh/1059-c-yu-yan-jing-sai-20-fen/</id>
        <link href="https://dreammilk.now.sh/1059-c-yu-yan-jing-sai-20-fen/">
        </link>
        <updated>2020-05-26T05:45:07.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>C 语言竞赛是浙江大学计算机学院主持的一个欢乐的竞赛。既然竞赛主旨是为了好玩，颁奖规则也就制定得很滑稽：</p>
<ul>
<li>0、冠军将赢得一份“神秘大奖”（比如很巨大的一本学生研究论文集……）。</li>
<li>1、排名为素数的学生将赢得最好的奖品 —— 小黄人玩偶！</li>
<li>2、其他人将得到巧克力。</li>
</ul>
<p>给定比赛的最终排名以及一系列参赛者的 ID，你要给出这些参赛者应该获得的奖品。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>C 语言竞赛是浙江大学计算机学院主持的一个欢乐的竞赛。既然竞赛主旨是为了好玩，颁奖规则也就制定得很滑稽：</p>
<ul>
<li>0、冠军将赢得一份“神秘大奖”（比如很巨大的一本学生研究论文集……）。</li>
<li>1、排名为素数的学生将赢得最好的奖品 —— 小黄人玩偶！</li>
<li>2、其他人将得到巧克力。</li>
</ul>
<p>给定比赛的最终排名以及一系列参赛者的 ID，你要给出这些参赛者应该获得的奖品。</p>
</blockquote>
<!-- more -->
<h3 id="输入格式">输入格式：</h3>
<blockquote>
<p>输入第一行给出一个正整数 <em>N</em>（≤<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span>），是参赛者人数。随后 <em>N</em> 行给出最终排名，每行按排名顺序给出一位参赛者的 ID（4 位数字组成）。接下来给出一个正整数 <em>K</em> 以及 <em>K</em> 个需要查询的 ID。</p>
</blockquote>
<h3 id="输出格式">输出格式：</h3>
<blockquote>
<p>对每个要查询的 ID，在一行中输出 <code>ID: 奖品</code>，其中奖品或者是 <code>Mystery Award</code>（神秘大奖）、或者是 <code>Minion</code>（小黄人）、或者是 <code>Chocolate</code>（巧克力）。如果所查 ID 根本不在排名里，打印 <code>Are you kidding?</code>（耍我呢？）。如果该 ID 已经查过了（即奖品已经领过了），打印 <code>ID: Checked</code>（不能多吃多占）。</p>
</blockquote>
<h3 id="输入样例">输入样例：</h3>
<pre><code class="language-in">6
1111
6666
8888
1234
5555
0001
6
8888
0001
1111
2222
8888
2222
</code></pre>
<h3 id="输出样例">输出样例：</h3>
<pre><code class="language-out">8888: Minion
0001: Chocolate
1111: Mystery Award
2222: Are you kidding?
8888: Checked
2222: Are you kidding?
</code></pre>
<h3 id="思路">思路：</h3>
<p>题目比较容易：</p>
<blockquote>
<p>可以使用一个数组将对应ID的名次进行存储，对于没有ID的名次置为0</p>
<p>在输出时，进行判断名次是否为0，为0说明查无此人</p>
<p>其他的名次按照题目条件进行判断</p>
<p>对于每一个查过的ID，需要将名次置为-1，避免重复查询</p>
</blockquote>
<p>至于素数的判断可以参考直接<code>1013 数素数</code></p>
<h4 id="于是代码如下">于是代码如下：</h4>
<pre><code class="language-cpp">#include &lt;iostream&gt;

using namespace std;

bool judge(int i){
    if(i &lt;= 3) return i &gt; 1;
    if(i%6 != 1 &amp;&amp; i%6 != 5) return false;
    for(int j=2;j*j &lt;= i;j++){
        if(i%j == 0) return false;
    }
    return true;
}

int main() {
    int n;
    cin &gt;&gt; n;
    int ids[10000]={0};
    for(int i=1;i&lt;=n;i++){
        int id;
        cin &gt;&gt; id;
        ids[id] = i;
    }
    int k;
    cin &gt;&gt; k;
    for(int i=0;i&lt;k;i++){
        string id;
        cin &gt;&gt; id;
        if(ids[stoi(id)]==0) cout &lt;&lt; id  &lt;&lt; &quot;: Are you kidding?&quot; &lt;&lt; endl;
        else if(ids[stoi(id)]==-1) cout &lt;&lt; id &lt;&lt; &quot;: Checked&quot; &lt;&lt; endl;
        else{
            if(ids[stoi(id)]==1){
                cout &lt;&lt; id &lt;&lt; &quot;: Mystery Award&quot; &lt;&lt; endl;
                ids[stoi(id)]=-1;
            }
            else if(judge(ids[stoi(id)])){
                cout &lt;&lt; id &lt;&lt; &quot;: Minion&quot; &lt;&lt; endl;
                ids[stoi(id)]=-1;
            }
            else{
                cout &lt;&lt; id &lt;&lt; &quot;: Chocolate&quot; &lt;&lt; endl;
                ids[stoi(id)]=-1;
            }
        }
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[1058 选择题 (20分)]]></title>
        <id>https://dreammilk.now.sh/1058-xuan-ze-ti-20-fen/</id>
        <link href="https://dreammilk.now.sh/1058-xuan-ze-ti-20-fen/">
        </link>
        <updated>2020-05-25T05:32:17.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>批改多选题是比较麻烦的事情，本题就请你写个程序帮助老师批改多选题，并且指出哪道题错的人最多。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>批改多选题是比较麻烦的事情，本题就请你写个程序帮助老师批改多选题，并且指出哪道题错的人最多。</p>
</blockquote>
<!-- more -->
<h3 id="输入格式">输入格式：</h3>
<blockquote>
<p>输入在第一行给出两个正整数 N（≤ 1000）和 M（≤ 100），分别是学生人数和多选题的个数。随后 M 行，每行顺次给出一道题的满分值（不超过 5 的正整数）、选项个数（不少于 2 且不超过 5 的正整数）、正确选项个数（不超过选项个数的正整数）、所有正确选项。注意每题的选项从小写英文字母 a 开始顺次排列。各项间以 1 个空格分隔。最后 N 行，每行给出一个学生的答题情况，其每题答案格式为 <code>(选中的选项个数 选项1 ……)</code>，按题目顺序给出。注意：题目保证学生的答题情况是合法的，即不存在选中的选项数超过实际选项数的情况。</p>
</blockquote>
<h3 id="输出格式">输出格式：</h3>
<blockquote>
<p>按照输入的顺序给出每个学生的得分，每个分数占一行。注意判题时只有选择全部正确才能得到该题的分数。最后一行输出错得最多的题目的错误次数和编号（题目按照输入的顺序从 1 开始编号）。如果有并列，则按编号递增顺序输出。数字间用空格分隔，行首尾不得有多余空格。如果所有题目都没有人错，则在最后一行输出 <code>Too simple</code>。</p>
</blockquote>
<h3 id="输入样例">输入样例：</h3>
<pre><code class="language-in">3 4 
3 4 2 a c
2 5 1 b
5 3 2 b c
1 5 4 a b d e
(2 a c) (2 b d) (2 a c) (3 a b e)
(2 a c) (1 b) (2 a b) (4 a b d e)
(2 b d) (1 e) (2 b c) (4 a b c d)
</code></pre>
<h3 id="输出样例">输出样例：</h3>
<pre><code class="language-out">3
6
5
2 2 3 4
</code></pre>
<h3 id="思路">思路：</h3>
<p>题目的难度有点高，先梳理一下结构：</p>
<blockquote>
<p>对于每题的选项使用set结构存储，因为每个选项不会重复并自动排序，可以直接比较正确选项与学生选项</p>
<p>每题再使用vector结构存储，可以循环遍历每题的答案</p>
<p>每题做错人数也使用vector结构存储，最后循环遍历出最大值</p>
<p>每题的分数使用vector储存可以方便统计分数</p>
</blockquote>
<p>再说一下题目逻辑：</p>
<blockquote>
<p>循环存储每题的分数和正确选项数，通过正确选项数，循环存储每题的正确选项</p>
<p>对于学生选项先获取选中个数，然后通过循环存储学生选项，对比两个set变量是否相等</p>
<p>如果相等就加分，否则该题做错人数加一</p>
<p>最后通过循环错题人数获取最大值，然后再循环一次找出这些错题（做错人数为最大值的题目）</p>
</blockquote>
<p>题目核心还是在于如何存储这些数据：</p>
<blockquote>
<p>本题输入函数推荐使用scanf函数，避免使用cin</p>
<p>因为题目涉及到的输入的代码比较多，cin可能会影响效率，并且在格式化输入上表现不佳</p>
<p>在输入时，首当其冲的细节是需要消除换行的回车<code>\n</code>符号，否则会引起莫名其妙的程序错误</p>
<p>其次，在捕获选项字符时，需要留意中间的空格，避免<code>%c</code>储存空格字符</p>
</blockquote>
<p>写的时候完全理不清思路，在存储数据上面不停的栽跟头，感觉写到现在水平依然处于入门阶段😭</p>
<h4 id="于是代码如下">于是代码如下：</h4>
<pre><code class="language-cpp">#include &lt;cstdio&gt;
#include &lt;vector&gt;
#include &lt;set&gt;

using namespace std;

int main() {
    int m,n,cnt;
    char c;
    scanf(&quot;%d%d&quot;,&amp;n,&amp;m);
    vector&lt;int&gt; score(m),error(m);
    vector&lt;set&lt;char&gt;&gt; options(m);
    for(int i=0;i&lt;m;i++){
        scanf(&quot;\n&quot;);
        scanf(&quot;%d%*d%d&quot;,&amp;score[i],&amp;cnt);
        for(int j=0;j&lt;cnt;j++){
            scanf(&quot; %c&quot;,&amp;c);
            options[i].insert(c);
        }
    }
    for(int i=0;i&lt;n;i++){
        int num = 0;
        scanf(&quot;\n&quot;);
        for(int j=0;j&lt;m;j++){
            if(j!=0) scanf(&quot; &quot;);
            set&lt;char&gt; ans;
            scanf(&quot;(%d&quot;,&amp;cnt);
            for(int k=0;k&lt;cnt;k++){
                scanf(&quot; %c&quot;,&amp;c);
                ans.insert(c);
            }
            scanf(&quot;)&quot;);
            if(ans == options[j]){
                num += score[j];
            }else{
                error[j] ++;
            }
        }
        printf(&quot;%d\n&quot;,num);
    }
    int max_error = 0;
    for(int i=0;i&lt;m;i++){
        if(error[i] &gt; max_error) max_error=error[i];
    }
    if(max_error==0) printf(&quot;Too simple&quot;);
    else{
        printf(&quot;%d&quot;,max_error);
        for(int i=0;i&lt;m;i++){
            if(error[i] == max_error) printf(&quot; %d&quot;,i+1);
        }
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[1057 数零壹 (20分)]]></title>
        <id>https://dreammilk.now.sh/1057-shu-ling-yi-20-fen/</id>
        <link href="https://dreammilk.now.sh/1057-shu-ling-yi-20-fen/">
        </link>
        <updated>2020-05-24T03:45:27.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>给定一串长度不超过 105 的字符串，本题要求你将其中所有英文字母的序号（字母 a-z 对应序号 1-26，不分大小写）相加，得到整数 N，然后再分析一下 N 的二进制表示中有多少 0、多少 1。例如给定字符串 <code>PAT (Basic)</code>，其字母序号之和为：16+1+20+2+1+19+9+3=71，而 71 的二进制是 1000111，即有 3 个 0、4 个 1。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>给定一串长度不超过 105 的字符串，本题要求你将其中所有英文字母的序号（字母 a-z 对应序号 1-26，不分大小写）相加，得到整数 N，然后再分析一下 N 的二进制表示中有多少 0、多少 1。例如给定字符串 <code>PAT (Basic)</code>，其字母序号之和为：16+1+20+2+1+19+9+3=71，而 71 的二进制是 1000111，即有 3 个 0、4 个 1。</p>
</blockquote>
<!-- more -->
<h3 id="输入格式">输入格式：</h3>
<blockquote>
<p>输入在一行中给出长度不超过 105、以回车结束的字符串。</p>
</blockquote>
<h3 id="输出格式">输出格式：</h3>
<blockquote>
<p>在一行中先后输出 0 的个数和 1 的个数，其间以空格分隔。</p>
</blockquote>
<h3 id="输入样例">输入样例：</h3>
<pre><code class="language-in">PAT (Basic)
</code></pre>
<h3 id="输出样例">输出样例：</h3>
<pre><code class="language-out">3 4
</code></pre>
<h3 id="思路">思路：</h3>
<p>题目比较容易：</p>
<blockquote>
<p>先将输入字符串转换为整数，这一步可以统一大写（小写）然后减去‘A’（‘a’）得到每个字母的大小</p>
<p>转换为二进制只需循环对2取余并除以2即可，使用数组统计0、1出现次数</p>
<p>最后输出数组即可</p>
</blockquote>
<p>关于输入时的要点：</p>
<blockquote>
<p>在输入时可能会存在空格，因此使用<code>getline</code>函数会比较好</p>
</blockquote>
<h4 id="于是代码如下">于是代码如下：</h4>
<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;cctype&gt;

using namespace std;

int main() {
    string s;
    getline(cin,s);
    int sum=0;
    for(int i=0;i&lt;s.length();i++){
        if(isalpha(s[i])) sum += tolower(s[i])-'a'+1;
    }
    int cnt[2]={0};
    while(sum&gt;0){
        cnt[sum%2]++;
        sum /= 2;
    }
    cout &lt;&lt; cnt[0] &lt;&lt; ' ' &lt;&lt; cnt[1];
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[1056 组合数的和 (15分)]]></title>
        <id>https://dreammilk.now.sh/1056-zu-he-shu-de-he-15-fen/</id>
        <link href="https://dreammilk.now.sh/1056-zu-he-shu-de-he-15-fen/">
        </link>
        <updated>2020-05-23T04:00:01.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>给定 N 个非 0 的个位数字，用其中任意 2 个数字都可以组合成 1 个 2 位的数字。要求所有可能组合出来的 2 位数字的和。例如给定 2、5、8，则可以组合出：25、28、52、58、82、85，它们的和为330。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>给定 N 个非 0 的个位数字，用其中任意 2 个数字都可以组合成 1 个 2 位的数字。要求所有可能组合出来的 2 位数字的和。例如给定 2、5、8，则可以组合出：25、28、52、58、82、85，它们的和为330。</p>
</blockquote>
<!-- more -->
<h3 id="输入格式">输入格式：</h3>
<blockquote>
<p>输入在一行中先给出 N（1 &lt; N &lt; 10），随后给出 N 个不同的非 0 个位数字。数字间以空格分隔。</p>
</blockquote>
<h3 id="输出格式">输出格式：</h3>
<blockquote>
<p>输出所有可能组合出来的2位数字的和。</p>
</blockquote>
<h3 id="输入样例">输入样例：</h3>
<pre><code class="language-in">3 2 8 5
</code></pre>
<h3 id="输出样例">输出样例：</h3>
<pre><code class="language-out">330
</code></pre>
<h3 id="思路">思路：</h3>
<p>题目的规律比较简单：</p>
<blockquote>
<p>通过题目中的例子可以看出<code>2、5、8</code>都在个位与十位出现过两次</p>
<p>再公式化一点，每个数字都需要成为剩下<code>n-1</code>个数的十位数，每个数字也需要成为其他数字的个位数</p>
<p>因此</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">每</mi><mi mathvariant="normal">个</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">字</mi><mi mathvariant="normal">出</mi><mi mathvariant="normal">现</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">和</mi><mo>=</mo><mn>10</mn><mo>∗</mo><mi mathvariant="normal">（</mi><mi>n</mi><mo>−</mo><mn>1</mn><mi mathvariant="normal">）</mi><mo>+</mo><mn>1</mn><mo>∗</mo><mi mathvariant="normal">（</mi><mi>n</mi><mo>−</mo><mn>1</mn><mi mathvariant="normal">）</mi><mo>=</mo><mn>11</mn><mo>∗</mo><mi mathvariant="normal">（</mi><mi>n</mi><mo>−</mo><mn>1</mn><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">每个数字出现的和=10*（n-1）+1*（n-1）=11*（n-1）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">字</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">现</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">和</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord cjk_fallback">）</span></span></span></span></span></p>
</blockquote>
<p>剩下的就是入门编程了</p>
<h4 id="于是代码如下">于是代码如下：</h4>
<pre><code class="language-cpp">#include&lt;iostream&gt;

using namespace std;

int main() {
    int n,sum=0;
    cin &gt;&gt; n;
    for(int i=0;i&lt;n;i++){
        int a;cin &gt;&gt; a;
        sum+=11*a*(n-1);
    }
    cout &lt;&lt; sum;
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[1055 集体照 (25分)]]></title>
        <id>https://dreammilk.now.sh/1055-ji-ti-zhao-25-fen/</id>
        <link href="https://dreammilk.now.sh/1055-ji-ti-zhao-25-fen/">
        </link>
        <updated>2020-05-22T03:48:51.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>拍集体照时队形很重要，这里对给定的 <em>N</em> 个人 <em>K</em> 排的队形设计排队规则如下：</p>
<ul>
<li>每排人数为 <em>N</em>/<em>K</em>（向下取整），多出来的人全部站在最后一排；</li>
<li>后排所有人的个子都不比前排任何人矮；</li>
<li>每排中最高者站中间（中间位置为 <em>m</em>/2+1，其中 <em>m</em> 为该排人数，除法向下取整）；</li>
<li>每排其他人以中间人为轴，按身高非增序，先右后左交替入队站在中间人的两侧（例如5人身高为190、188、186、175、170，则队形为175、188、190、186、170。这里假设你面对拍照者，所以你的左边是中间人的右边）；</li>
<li>若多人身高相同，则按名字的字典序升序排列。这里保证无重名。</li>
</ul>
<p>现给定一组拍照人，请编写程序输出他们的队形。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>拍集体照时队形很重要，这里对给定的 <em>N</em> 个人 <em>K</em> 排的队形设计排队规则如下：</p>
<ul>
<li>每排人数为 <em>N</em>/<em>K</em>（向下取整），多出来的人全部站在最后一排；</li>
<li>后排所有人的个子都不比前排任何人矮；</li>
<li>每排中最高者站中间（中间位置为 <em>m</em>/2+1，其中 <em>m</em> 为该排人数，除法向下取整）；</li>
<li>每排其他人以中间人为轴，按身高非增序，先右后左交替入队站在中间人的两侧（例如5人身高为190、188、186、175、170，则队形为175、188、190、186、170。这里假设你面对拍照者，所以你的左边是中间人的右边）；</li>
<li>若多人身高相同，则按名字的字典序升序排列。这里保证无重名。</li>
</ul>
<p>现给定一组拍照人，请编写程序输出他们的队形。</p>
</blockquote>
<!-- more -->
<h3 id="输入格式">输入格式：</h3>
<blockquote>
<p>每个输入包含 1 个测试用例。每个测试用例第 1 行给出两个正整数 <em>N</em>（≤<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span>，总人数）和 <em>K</em>（≤10，总排数）。随后 <em>N</em> 行，每行给出一个人的名字（不包含空格、长度不超过 8 个英文字母）和身高（[30, 300] 区间内的整数）。</p>
</blockquote>
<h3 id="输出格式">输出格式：</h3>
<blockquote>
<p>输出拍照的队形。即K排人名，其间以空格分隔，行末不得有多余空格。注意：假设你面对拍照者，后排的人输出在上方，前排输出在下方。</p>
</blockquote>
<h3 id="输入样例">输入样例：</h3>
<pre><code class="language-in">10 3
Tom 188
Mike 170
Eva 168
Tim 160
Joe 190
Ann 168
Bob 175
Nick 186
Amy 160
John 159
</code></pre>
<h3 id="输出样例">输出样例：</h3>
<pre><code class="language-out">Bob Tom Joe Nick
Ann Mike Eva
Tim Amy John
</code></pre>
<h3 id="思路">思路：</h3>
<p>题目看着就有点晕，稍微梳理一下：</p>
<blockquote>
<p>首先在输出时大致顺序还是从高到低，所以需要按照题目要求对输入身高排序</p>
<p>因为每排输出时并不是按顺序来的，而是按照先右后左的顺序排列</p>
<p>这个可以寻找规律，（<code>row</code>为当前行元素个数）最左端<code>row-row%2</code>，最右端<code>row+row%2-1</code></p>
<p>也可以直接用一个数组存储每一行，存储到对应的位置下标然后输出整个数组</p>
</blockquote>
<p>总结一下：</p>
<blockquote>
<p>在题目需要按照某种复杂规律输出时，并不一定要总结规律，可以将顺序对应到数组下标，直接按照题目所说的逻辑，将每个元素存放到对应位置，这个方法会避免逻辑打结，以及调试时把自己绕晕💫</p>
</blockquote>
<h4 id="于是代码如下">于是代码如下：</h4>
<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;vector&gt;
#include&lt;algorithm&gt;

using namespace std;

struct stu{
    string name;
    int height;
};

bool cmp(stu a,stu b){
    if(a.height != b.height) return a.height&gt;b.height;
    else return a.name&lt;b.name;
}

int main() {
    int N,K;
    cin &gt;&gt; N &gt;&gt; K;
    int m=N/K;
    vector&lt;stu&gt; v(N);
    for(int i=0;i&lt;N;i++) cin &gt;&gt; v[i].name &gt;&gt; v[i].height;
    sort(v.begin(),v.end(),cmp);
    string str;
    int row,index=0;
    for(int i=0;i&lt;K;i++){
        str =&quot;&quot;;
        row = i!=0?m:m+N%K;
        for(int j=row-row%2-1;j&gt;0;j-=2) str += v[j+index].name+&quot; &quot;;
        str += i!=0?v[N%K+i*row].name:v[0].name;
        for(int j=2;j&lt;=row+row%2-2;j+=2) str += &quot; &quot;+v[j+index].name;
        cout &lt;&lt; str &lt;&lt; endl;
        index += row;
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[1054 求平均值 (20分)]]></title>
        <id>https://dreammilk.now.sh/1054-qiu-ping-jun-zhi-20-fen/</id>
        <link href="https://dreammilk.now.sh/1054-qiu-ping-jun-zhi-20-fen/">
        </link>
        <updated>2020-05-21T04:40:39.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>本题的基本要求非常简单：给定 <em>N</em> 个实数，计算它们的平均值。但复杂的是有些输入数据可能是非法的。一个“合法”的输入是 [−1000,1000] 区间内的实数，并且最多精确到小数点后 2 位。当你计算平均值的时候，不能把那些非法的数据算在内。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>本题的基本要求非常简单：给定 <em>N</em> 个实数，计算它们的平均值。但复杂的是有些输入数据可能是非法的。一个“合法”的输入是 [−1000,1000] 区间内的实数，并且最多精确到小数点后 2 位。当你计算平均值的时候，不能把那些非法的数据算在内。</p>
</blockquote>
<!-- more -->
<h3 id="输入格式">输入格式：</h3>
<blockquote>
<p>输入第一行给出正整数 <em>N</em>（≤100）。随后一行给出 <em>N</em> 个实数，数字间以一个空格分隔。</p>
</blockquote>
<h3 id="输出格式">输出格式：</h3>
<blockquote>
<p>对每个非法输入，在一行中输出 <code>ERROR: X is not a legal number</code>，其中 <code>X</code> 是输入。最后在一行中输出结果：<code>The average of K numbers is Y</code>，其中 <code>K</code> 是合法输入的个数，<code>Y</code> 是它们的平均值，精确到小数点后 2 位。如果平均值无法计算，则用 <code>Undefined</code> 替换 <code>Y</code>。如果 <code>K</code> 为 1，则输出 <code>The average of 1 number is Y</code>。</p>
</blockquote>
<h3 id="输入样例1">输入样例1：</h3>
<pre><code class="language-in">7
5 -3.2 aaa 9999 2.3.4 7.123 2.35
</code></pre>
<h3 id="输出样例1">输出样例1：</h3>
<pre><code class="language-out">ERROR: aaa is not a legal number
ERROR: 9999 is not a legal number
ERROR: 2.3.4 is not a legal number
ERROR: 7.123 is not a legal number
The average of 3 numbers is 1.38
</code></pre>
<h3 id="输入样例2">输入样例2：</h3>
<pre><code class="language-in">2
aaa -9999
</code></pre>
<h3 id="输出样例2">输出样例2：</h3>
<pre><code class="language-out">ERROR: aaa is not a legal number
ERROR: -9999 is not a legal number
The average of 0 numbers is Undefined
</code></pre>
<h3 id="思路">思路：</h3>
<p>题目主要是如何过滤数据：</p>
<blockquote>
<p>根据题目的要求可以得出以下的数字特点</p>
<ul>
<li>输入的数字只能包含<code>-</code> &amp;<code>.</code>&amp; <code>数字</code>（保证输入中只有这三种符号）</li>
<li><code>-</code>只能出现在开头（保证除首位以外，只有小数点和数字）</li>
<li><code>-</code>后面不能存在<code>.</code>（保证小数点前至少有一位数字）</li>
<li><code>.</code>只能出现一次，且后面只能有两个数字字符（保证小数点不会再次出现小数点）</li>
<li>数字大小不要超过 [−1000,1000] 区间（保证数字大小符合条件）</li>
</ul>
<p>对于判断的顺序按照上面所列的次序进行，避免错误或进行额外的判断</p>
</blockquote>
<p>关于输出时的一个格式问题：</p>
<blockquote>
<p>如果只有一个数字符合要求，输出语句中应该为<code>number</code>不要添加<code>s</code></p>
</blockquote>
<p>看见柳婼大佬写的20行代码确实比较简洁：</p>
<blockquote>
<p>在过滤数字的时候使用了<code>sscanf</code>函数与<code>sprintf</code>函数，这两个函数能够格式化输入数据，将符合条件的数字进行存储，省略了这种原始的过滤方式</p>
</blockquote>
<p>但是对于这两个函数不是很了解，等以后再琢磨一下如何使用😭</p>
<h4 id="于是代码如下">于是代码如下：</h4>
<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;string&gt;
#include&lt;vector&gt;

using namespace std;

int main() {
    int N;
    cin &gt;&gt; N;
    vector&lt;double&gt; v;
    for(int i=0;i&lt;N;i++){
        string s;
        cin &gt;&gt; s;
        int j=0,point=0;
        for(;j&lt;s.length();j++){
            if((s[j]&gt;='0'&amp;&amp;s[j]&lt;='9') || s[j]=='.' || s[j]=='-'){
                if(s[j]=='-' &amp;&amp; j!=0) break;
                if(s[j]=='.'){
                    if(j==0) break;
                    if(s[j-1]=='-') break;
                    if(s.length()-j&gt;3) break;
                    point ++;
                    if(point == 2) break;
                }
            }
            else break;
        }
        if(j==s.length() &amp;&amp; stod(s)&gt;=-1000 &amp;&amp; stod(s)&lt;=1000) v.push_back(stod(s));
        else cout &lt;&lt; &quot;ERROR: &quot; &lt;&lt; s &lt;&lt; &quot; is not a legal number&quot; &lt;&lt; endl;
    }
    double sum=0;
    if(v.size()==0){printf(&quot;The average of 0 numbers is Undefined&quot;);}
    else if(v.size()==1){printf(&quot;The average of 1 number is %.2f&quot;,v[0]);}
    else{
        for(int i=0;i&lt;v.size();i++) sum += v[i];
        printf(&quot;The average of %d numbers is %.2f&quot;, v.size(),sum/v.size());
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[1053 住房空置率 (20分)]]></title>
        <id>https://dreammilk.now.sh/1053-zhu-fang-kong-zhi-lu-20-fen/</id>
        <link href="https://dreammilk.now.sh/1053-zhu-fang-kong-zhi-lu-20-fen/">
        </link>
        <updated>2020-05-20T02:54:06.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>在不打扰居民的前提下，统计住房空置率的一种方法是根据每户用电量的连续变化规律进行判断。判断方法如下：</p>
<ul>
<li>在观察期内，若存在超过一半的日子用电量低于某给定的阈值 <em>e</em>，则该住房为“可能空置”；</li>
<li>若观察期超过某给定阈值 <em>D</em> 天，且满足上一个条件，则该住房为“空置”。</li>
</ul>
<p>现给定某居民区的住户用电量数据，请你统计“可能空置”的比率和“空置”比率，即以上两种状态的住房占居民区住房总套数的百分比。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<h3 id="题目">题目</h3>
<blockquote>
<p>在不打扰居民的前提下，统计住房空置率的一种方法是根据每户用电量的连续变化规律进行判断。判断方法如下：</p>
<ul>
<li>在观察期内，若存在超过一半的日子用电量低于某给定的阈值 <em>e</em>，则该住房为“可能空置”；</li>
<li>若观察期超过某给定阈值 <em>D</em> 天，且满足上一个条件，则该住房为“空置”。</li>
</ul>
<p>现给定某居民区的住户用电量数据，请你统计“可能空置”的比率和“空置”比率，即以上两种状态的住房占居民区住房总套数的百分比。</p>
</blockquote>
<!-- more -->
<h3 id="输入格式">输入格式：</h3>
<blockquote>
<p>输入第一行给出正整数 <em>N</em>（≤1000），为居民区住房总套数；正实数 <em>e</em>，即低电量阈值；正整数 <em>D</em>，即观察期阈值。随后 <em>N</em> 行，每行按以下格式给出一套住房的用电量数据：</p>
<p><em>K</em> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ... <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>K</mi></msub></mrow><annotation encoding="application/x-tex">E_K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>其中 <em>K</em> 为观察的天数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">E_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为第 <em>i</em> 天的用电量。</p>
</blockquote>
<h3 id="输出格式">输出格式：</h3>
<blockquote>
<p>在一行中输出“可能空置”的比率和“空置”比率的百分比值，其间以一个空格分隔，保留小数点后 1 位。</p>
</blockquote>
<h3 id="输入样例">输入样例：</h3>
<pre><code class="language-in">5 0.5 10
6 0.3 0.4 0.5 0.2 0.8 0.6
10 0.0 0.1 0.2 0.3 0.0 0.8 0.6 0.7 0.0 0.5
5 0.4 0.3 0.5 0.1 0.7
11 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1
11 2 2 2 1 1 0.1 1 0.1 0.1 0.1 0.1
</code></pre>
<h3 id="输出样例">输出样例：</h3>
<pre><code class="language-out">40.0% 20.0%
</code></pre>
<p>（样例解释：第2、3户为“可能空置”，第4户为“空置”，其他户不是空置。）</p>
<h3 id="思路">思路：</h3>
<p>题目的逻辑很清晰：</p>
<blockquote>
<p>分别统计每户每天的电量是否低于阈值，得到低于阈值的天数</p>
<p>如果天数超过观察期的一半，则可能空置，如果观察期也大于阈值，则空置</p>
</blockquote>
<p>关于输出时的要点：</p>
<blockquote>
<p>为了输出浮点数，需要将分子分母强制转换一下，或者在开始定义变量时，使用浮点数</p>
</blockquote>
<h4 id="于是代码如下">于是代码如下：</h4>
<pre><code class="language-cpp">#include&lt;iostream&gt;

using namespace std;

int main() {
    int N,D,must=0,may=0;float e;
    cin &gt;&gt; N &gt;&gt; e &gt;&gt; D;
    for(int i=0;i&lt;N;i++){
        int K,day=0;
        cin &gt;&gt; K;
        for(int i=0;i&lt;K;i++){
            float E;cin &gt;&gt; E;
            if(E&lt;e) day++;
        }
        if(day&gt;K/2 &amp;&amp; K&gt;D) must++;
        else if(day&gt;K/2) may++;
    }
    printf(&quot;%.1f%% %.1f%%&quot;,float(may)*100/float(N),float(must)*100/float(N));
    return 0;
}
</code></pre>
]]></content>
    </entry>
</feed>